#!/usr/bin/env node

/**
 * ูุญุต ุฎุฏูุงุช MySQL ุงููุชุงุญุฉ ุนูู ุงููุธุงู
 * Check Available MySQL Services on System
 */

import { exec } from 'child_process';
import { promisify } from 'util';
import fs from 'fs';

const execAsync = promisify(exec);

console.log('๐ ูุญุต ุฎุฏูุงุช MySQL ุงููุชุงุญุฉ');
console.log('===========================');
console.log('');

async function checkMySQLServices() {
  try {
    console.log('1๏ธโฃ ุงูุจุญุซ ุนู ุฎุฏูุงุช MySQL...');
    
    // ุงูุจุญุซ ุนู ุฎุฏูุงุช MySQL
    try {
      const { stdout } = await execAsync('Get-Service -Name "*mysql*" | Format-Table -AutoSize', { shell: 'powershell' });
      if (stdout.trim()) {
        console.log('โ ุฎุฏูุงุช MySQL ููุฌูุฏุฉ:');
        console.log(stdout);
      } else {
        console.log('โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุฎุฏูุงุช MySQL');
      }
    } catch (error) {
      console.log('โ ุฎุทุฃ ูู ุงูุจุญุซ ุนู ุฎุฏูุงุช MySQL');
    }

    console.log('');
    console.log('2๏ธโฃ ูุญุต ูุณุงุฑุงุช MySQL ุงูุดุงุฆุนุฉ...');
    
    const commonPaths = [
      'C:\\xampp\\mysql\\bin\\mysql.exe',
      'C:\\wamp64\\bin\\mysql\\mysql8.0.31\\bin\\mysql.exe',
      'C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin\\mysql.exe',
      'C:\\Program Files\\MySQL\\MySQL Server 5.7\\bin\\mysql.exe',
      'C:\\mysql\\bin\\mysql.exe'
    ];

    let foundPath = null;
    
    for (const path of commonPaths) {
      try {
        if (fs.existsSync(path)) {
          console.log(`โ ุชู ุงูุนุซูุฑ ุนูู MySQL ูู: ${path}`);
          foundPath = path;
          break;
        }
      } catch (error) {
        // ุชุฌุงูู ุงูุฃุฎุทุงุก
      }
    }

    if (!foundPath) {
      console.log('โ ูู ูุชู ุงูุนุซูุฑ ุนูู MySQL ูู ุงููุณุงุฑุงุช ุงูุดุงุฆุนุฉ');
    }

    console.log('');
    console.log('3๏ธโฃ ูุญุต ุงูููุงูุฐ ุงููุณุชุฎุฏูุฉ...');
    
    try {
      const { stdout } = await execAsync('netstat -an | findstr :3306', { shell: 'cmd' });
      if (stdout.trim()) {
        console.log('โ ุงููููุฐ 3306 ูุณุชุฎุฏู:');
        console.log(stdout);
      } else {
        console.log('โ ุงููููุฐ 3306 ุบูุฑ ูุณุชุฎุฏู');
      }
    } catch (error) {
      console.log('โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงุชุตุงูุงุช ุนูู ุงููููุฐ 3306');
    }

    console.log('');
    console.log('๐ ุงูุชูุตูุงุช:');
    
    if (!foundPath) {
      console.log('๐ก ูุชุซุจูุช MySQLุ ููููู:');
      console.log('   1. ุชุญููู XAMPP ูู: https://www.apachefriends.org/');
      console.log('   2. ุชุญููู MySQL Community Server ูู: https://dev.mysql.com/downloads/');
      console.log('   3. ุชุญููู WAMP ูู: https://www.wampserver.com/');
    } else {
      console.log('๐ก MySQL ูุซุจุชุ ุชุฃูุฏ ูู:');
      console.log('   1. ุชุดุบูู ุฎุฏูุฉ MySQL');
      console.log('   2. ุตุญุฉ ุฅุนุฏุงุฏุงุช ุงูุงุชุตุงู ูู ููู .env');
      console.log('   3. ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุงููุณุชุฎุฏู');
    }

  } catch (error) {
    console.log('โ ุฎุทุฃ ูู ูุญุต ุงููุธุงู:', error.message);
  }
}

// ุชุดุบูู ุงููุญุต
checkMySQLServices();